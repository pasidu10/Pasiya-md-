const { cmd, commands } = require("../command");
const axios = require("axios");

cmd({
    pattern: "tt",
    react: 'üéµ',
    alias: ["tiktok", "tiktokdl"],
    desc: "Download TikTok video",
    category: "media",
    filename: __filename
},
async(robin, mek, m, {from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply}) => {
    try {
        if (!q) return reply("Please provide a TikTok URL");
        
        if (!q.includes("tiktok.com")) return reply("‚ùå Invalid TikTok URL");
        
        await reply("üì• Processing TikTok video...");
        
        const apiUrl = `https://apis.davidcyriltech.my.id/download/tiktok?url=${encodeURIComponent(q)}`;
        const response = await axios.get(apiUrl);
        
        if (!response.data.success || !response.data.result?.video) {
            return reply("‚ùå Failed to fetch TikTok video");
        }
        
        const result = response.data.result;
        
        // Format info message
        const infoMessage = `
‚ïî‚ïê‚ïê‚ú¶‚ùò‡ºª *HANS BYTE* ‡º∫‚ùò‚ú¶‚ïê‚ïê‚ïó
‚îá  üéµ *TIKTOK DOWNLOAD* üéµ
‚îá‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
‚îá‚îÇ‚Ä¢üìπ Type: ${result.type ? result.type.toUpperCase() : 'UNKNOWN'}
‚îá‚îÇ‚Ä¢üí¨ Description: ${result.desc || 'No description'}
‚îá‚îÇ‚Ä¢üë§ Author: ${result.author?.nickname || 'Unknown'}
‚îá‚îÇ‚Ä¢üîó Link: ${q}
‚ï∞‚îÄ„Éª‚îÄ„Éª‚îÄ„Éª‚îÄ„Éª‚îÄ„Éª‚îÄ„Éª‚îÄ„Éª‚îÄ‚ïØ
‚îá *Statistics:*
‚îá ‚Ä¢ Likes: ${result.statistics?.likeCount || '0'}
‚îá ‚Ä¢ Comments: ${result.statistics?.commentCount || '0'}
‚îá ‚Ä¢ Shares: ${result.statistics?.shareCount || '0'}
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
> POWERED BY HANS BYTE MD`.trim();

        // Send author avatar with info
        if (result.author?.avatar) {
            await robin.sendMessage(
                from,
                {
                    image: { url: result.author.avatar },
                    caption: infoMessage
                },
                { quoted: mek }
            );
        } else {
            await reply(infoMessage);
        }

        // Send video
        await robin.sendMessage(
            from,
            {
                video: { url: result.video },
                mimetype: "video/mp4",
                caption: "üé¨ TikTok Video - HANS BYTE MD"
            },
            { quoted: mek }
        );

    } catch (error) {
        console.error("TikTok Error:", error);
        reply("‚ùå Error downloading TikTok video. Please try again.");
    }
});